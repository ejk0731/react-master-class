npm i react-router-dom@5.3.4
npm i react-query
타입 정의 필요
npm i --save-dev @types/react-router-dom

------------------------

url 파라미터를 잡아내고 싶을때 useParams 훅사용

------------------------

index.tsx에서 ThemeProvider 컴포넌트 사용
import { ThemeProvider } from "styled-components";

------------------------

tsconfig.json에서 설정 필요, 안할경우 style-component 사용시 오류남
"include":  ["src/**/*.tsx", "src/**/*.ts", "src/**/*.d.ts"]

------------------------

Reset CSS
https://github.com/zacanger/styled-reset/blob/master/src/index.ts

------------------------

Coin API
https://api.coinpaprika.com/v1/coins

------------------------

anchor Tag makes the page to refresh, but we don't want to refresh the page.
so we use Link tag instead. 

------------------------

This will run immediately.
useEffect(() => {
  (() => console.log(1))();
}, []);

------------------------

Route States
  <Link
    to={{
      pathname: `/${coin.id}`,
      state: { name: coin.name },
    }}
  >
  const location = useLocation();

------------------------

Data types
console.log(data)
  browser console, mouse right click
  store object as global variable => temp1 has Data
So i don't have to declare all the data type

  Object.keys(temp1) on console - then you will get all key data from temp1 => as an array
  Object.keys(temp1).join() on console - then you will get the result => as string
  Object.values(temp1)
  Object.values(temp1).map(v => typeof v)
  Object.values(temp1).map(v => typeof v).join()
------------------------

interface title or name 
  put I at first, so that people can now that it's an interface
  ex) interface IPriceData {}

------------------------

useful keyboard shortcut

  - Alt + ⇧(shift) + i : can add cursor at the end of each line which you dragged

------------------------

useRouteMatch

------------------------

React Query
  https://tanstack.com/query/latest/docs/framework/react/overview
  if you didn't install it at first => npm install react query
  
  # data, loading -> make it automatic

    ex)
    const [coins, setCoins] = useState<CoinInterface[]>([]);
    const [loading, setLoading] = useState<boolean>(true);
    useEffect(() => {
      (() => console.log(1))();
      (async () => {
        const response = await fetch("https://api.coinpaprika.com/v1/coins");
        const json = await response.json();
        setCoins(json.slice(0, 100));
        setLoading(false);
      })();
      console.log(coins);
    }, []);

  # make fetch not in your component

  # so make api.ts
    export async function fetchCoins() {
      return fetch("https://api.coinpaprika.com/v1/coins").then((response) => {
        response.json();
      });
    }
  
  # use api in your component
    const {isLoading, data} = useQuery("allCoins", fetchCoins);
    
    *****
    1. useQuery will execute fetch function 
    2. and if it's done it will tell you with isLoading 
    3. and put json() data which i got from fetch function into data
   
    @@ When you use more than two queries at the same time, key has to be unique!! (+++ key is array type)
    const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(["info", coinId], () => fetchCoinInfo(coinId));
    const { isLoading: tickersLoading, data: tickersData } = useQuery<IPriceData>(["tickers", coinId], () => fetchCoinTickers(coinId));

  # react query is caching the response
    So if you go back and forth, it doesn't load anymore. It loads just once!

  # npm i @tanstack/react-query-devtools
    You can see what data is cached through ReactQueryDevtools.

    import {ReactQueryDevtools} from "react-query/devtools";

    function App() {
      return (
        <>
          <GlobalStyle />
          <Router />
          <ReactQueryDevtools initialIsOpen={true} />
        </>
      );
    }

------------------------

  Route path, Link to 넘겨주는게 다름, 
  Route path에 Link to 처럼 {`/${coinId}/price`} 식으로 넘기면 useParams 안넘어옴! 
  path 는 {`/:coinId/price`} 요런식으로 넘겨줘야함

------------------------
  Date.now(); => milliseconds / 1000 => seconds

  Math.floor(); 1.9 => 1
  Math.ceil(); 1.9 => 2